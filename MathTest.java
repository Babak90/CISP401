/***************************************************************************************
 Babak Adeli                                                                     
 SID#: w1206929                                                                  
 AD3                                                                             
 CISP 401                                                                         
 2017 Spring Semester                                                             
                                                                                  
 This is a Java application called MathTest that will help an elementary school student
 learn multiplication, division, addition and subtraction.  It randomly chooses between
 one of the four question types to ask, asks them then stores the questions and answers
 in an array.  In the end, it displays those questions and answers and also produces
 one of the randomly generated messages based on the student's score.

 ***************************************************************************************/







import java.security.SecureRandom; //import for secure random

public class MathTest {
	

	static int[][] storeQuestions = new int[100][5]; //There is a 100 by 5 two dimensional integer array to store up to 100 math questions
	static int questNum = 0; //start off with 0 questions asked
	static int numCorrect = 0; //start off with 0 correct answers
	static SecureRandom randomNumbers = new SecureRandom(); //random numbers will be secure random numbers


	/*
		The main function is a public static function.  
		It takes a string array argument but it does not return anything.  
		Inside the function you need to instantiate Addition, Subtraction, Multiply, Division and MathTest objects, 
		and create a random selection among the Addition, Subtraction, Multiply and Division objects call to generate questions, answers and comments.  
		Inside this function we need to call printQuestionResult function of MathTest  object

	*/
	public static void main(String[] args) {
		

		Addition addition1 = new Addition(); // create an addition object
		Subtraction subtraction1 = new Subtraction(); //create a subtraction object
		Multiply multiply1 = new Multiply(); //create a multiply object
		Division division1 = new Division(); //create a division object
		boolean exit = false; //exit flag for the while loop
		int[] tempArray = new int[5]; //temp array to get a return from a class. values will then be stored in storeQuestions
		
		
		while (!exit)
		{
			
			//tempArray = division1.quiz(); //fill the temp array with the new question/answer
			
			int randQuest = 1 + randomNumbers.nextInt(4); //get a random number from 1-4 

			switch (randQuest) //switch to call the quiz method of the correct object
			{
				case 1:	//1 is for addition
					tempArray = addition1.quiz(); //call addition
					break;
				case 2: //2 is for subtraction
					tempArray = subtraction1.quiz(); //call subtraction
					break;
				case 3: //3 is for multiply
					tempArray = multiply1.quiz(); //call multiply
					break;
				case 4: //4 is for division
					tempArray = division1.quiz(); //call division
			}

			
			if (tempArray[0] == -1) //if the user decided to exit
			{
				exit = true; //break out of the while loop
			}
			
			else 
			{
				for (int i = 0; i <=4; i++)
				{
					storeQuestions[questNum][i] = tempArray[i];
				}
			}

			questNum++; //increment the question number

		}//end while loop

		printQuestionResult(); //finally call printQuestionResults

	}//end main
	

	/*
	The printQuestionResult function is a public function.  
	It does not take and return anything.  
	This function prints out the questions, answers, statistics information and comment.
	*/
	public static void printQuestionResult()
	{
		System.out.println("\n\nThe questions generated by the system are:"); //print the generated questions and answers for the user
		for (int i = 0; i < (questNum - 1); i++) //for loop to loop through the array that has all of the questions in it
		{
			System.out.print(storeQuestions[i][0] + " " ); //print the first number of the question

			switch (storeQuestions[i][1]) //switch to print either +, -, *, or /
			{
				case 1:
					System.out.print("+"); //1 for add
					break;
				case 2:
					System.out.print("-"); //2 for subtract
					break;
				case 3:
					System.out.print("*"); //3 for multiply
					break;
				case 4:
					System.out.print("/"); //4 for divide
					break;
			}

			//print the rest of the question and answer
			System.out.print(" " + storeQuestions[i][2] + " = " + storeQuestions[i][3]);

			if (storeQuestions[i][3] != storeQuestions[i][4]) //if the user was incorrect by comparing correct with their answer
			{
				System.out.print("	Your answer was " + storeQuestions[i][4] + ", which is incorrect."); //show them their answer
			}

			else //else they were correct
			{
				numCorrect++; //increment numCorrect
			}
			
			System.out.println(); //print new line for aesthetic reasons
		}
		System.out.println("---------------------------------------------------------------\n"); //print bar to separate results
		
		//tell the user how many questions were asked and how many they answered correctly
		System.out.println("You got " + (questNum - 1) + " questions and made " + numCorrect + " questions correct.");
		
		double nc = numCorrect; //double for number of questions correct
		double qn = questNum; //double for number of questions asked
		String retResponse = ""; //string to get a response based on score
		int randResponse = 1 + randomNumbers.nextInt(4); //generates random number from 1 to 4
		
		if ((nc/(qn-1)) >= (2.0/3.0) ) //if they got at least two thirds of the questions right
		{
			//switch to generate a response based on the random number generated
			switch (randResponse)
			{
			case 1: 
				retResponse = "Very good!";
				break;
			case 2: 
				retResponse = "Excellent!";
				break;
			case 3: 
				retResponse = "Nice Work!";
				break;
			case 4:
				retResponse = "Keep up the good work!";
				break;
	
			}

		}
		else //they got over a third of the questions wrong
		{
			switch (randResponse) //switch for a response
			{
			case 1:
				retResponse = "No. Please try again.";
				break;
			case 2:
				retResponse = "Wrong. Try once more.";
				break;
			case 3:
				retResponse = "Don't give up!";
				break;
			case 4:
				retResponse = "No. Keep trying.";
				break;
			}
		}
		
		System.out.println(retResponse); //print out the final response
		
	}// end printQuestionResults


}// end class
